name: Daily Paper du jour

on:
  schedule:
    - cron: '*/15 * * * *'   # toutes les 15 minutes (UTC)
  workflow_dispatch: {}
  push:
    branches: [ main ]

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install deps
        run: npm install

      # ðŸ‘‰ GÃ©nÃ©ration des contenus (colonne principale + colonne gauche)
      - name: Generate news (papers)
        run: npm run generate

      - name: Generate CleaReconDL (left column)
        run: npm run generate:clearecondl
        env:
          # Optionnel si tu utilises RSSHub/chaÃ®nes YouTube :
          RSSHUB_BASE: ${{ vars.RSSHUB_BASE }}                # ex: https://rsshub.example.com
          LINKEDIN_COMPANY_IDS: ${{ vars.LINKEDIN_COMPANY_IDS }}  # ex: "1337,2414183"
          YT_CHANNEL_IDS: ${{ vars.YT_CHANNEL_IDS }}              # ex: "UCxxxx,UCyyyy"

      # (Optionnel) petit diagnostic pour vÃ©rifier que des fichiers ont bien Ã©tÃ© gÃ©nÃ©rÃ©s
      - name: Debug counts
        run: |
          echo "papers:" $(ls -1 src/content/papers 2>/dev/null | wc -l || true)
          echo "clearecondl:" $(ls -1 src/content/clearecondl 2>/dev/null | wc -l || true)

      - name: Commit generated content back to repo
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -A
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "chore: add news $(date -u +'%Y-%m-%d %H:%M') [skip ci]"
            git push
          fi

      - name: Build
        run: npm run build

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
